{
  "version": 3,
  "sources": ["../../antd/es/_util/warning.js"],
  "sourcesContent": ["import * as React from 'react';\nimport rcWarning, { resetWarned as rcResetWarned } from \"rc-util/es/warning\";\nexport function noop() {}\nlet deprecatedWarnList = null;\nexport function resetWarned() {\n  deprecatedWarnList = null;\n  rcResetWarned();\n}\n// eslint-disable-next-line import/no-mutable-exports\nlet warning = noop;\nif (process.env.NODE_ENV !== 'production') {\n  warning = (valid, component, message) => {\n    rcWarning(valid, `[antd: ${component}] ${message}`);\n    // StrictMode will inject console which will not throw warning in React 17.\n    if (process.env.NODE_ENV === 'test') {\n      resetWarned();\n    }\n  };\n}\nexport const WarningContext = /*#__PURE__*/React.createContext({});\n/**\n * This is a hook but we not named as `useWarning`\n * since this is only used in development.\n * We should always wrap this in `if (process.env.NODE_ENV !== 'production')` condition\n */\nexport const devUseWarning = process.env.NODE_ENV !== 'production' ? component => {\n  const {\n    strict\n  } = React.useContext(WarningContext);\n  const typeWarning = (valid, type, message) => {\n    if (!valid) {\n      if (strict === false && type === 'deprecated') {\n        const existWarning = deprecatedWarnList;\n        if (!deprecatedWarnList) {\n          deprecatedWarnList = {};\n        }\n        deprecatedWarnList[component] = deprecatedWarnList[component] || [];\n        if (!deprecatedWarnList[component].includes(message || '')) {\n          deprecatedWarnList[component].push(message || '');\n        }\n        // Warning for the first time\n        if (!existWarning) {\n          // eslint-disable-next-line no-console\n          console.warn('[antd] There exists deprecated usage in your code:', deprecatedWarnList);\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(valid, component, message) : void 0;\n      }\n    }\n  };\n  typeWarning.deprecated = (valid, oldProp, newProp, message) => {\n    typeWarning(valid, 'deprecated', `\\`${oldProp}\\` is deprecated. Please use \\`${newProp}\\` instead.${message ? ` ${message}` : ''}`);\n  };\n  return typeWarning;\n} : () => {\n  const noopWarning = () => {};\n  noopWarning.deprecated = noop;\n  return noopWarning;\n};\nexport default warning;"],
  "mappings": ";;;;;;;;;;;;AAAA,YAAuB;AAEhB,SAAS,OAAO;AAAC;AACxB,IAAI,qBAAqB;AAClB,SAASA,eAAc;AAC5B,uBAAqB;AACrB,cAAc;AAChB;AAEA,IAAI,UAAU;AACd,IAAI,MAAuC;AACzC,YAAU,CAAC,OAAO,WAAW,YAAY;AACvC,oBAAU,OAAO,UAAU,SAAS,KAAK,OAAO,EAAE;AAElD,QAAI,OAAiC;AACnC,MAAAA,aAAY;AAAA,IACd;AAAA,EACF;AACF;AACO,IAAM,iBAAoC,oBAAc,CAAC,CAAC;AAM1D,IAAM,gBAAgB,OAAwC,eAAa;AAChF,QAAM;AAAA,IACJ;AAAA,EACF,IAAU,iBAAW,cAAc;AACnC,QAAM,cAAc,CAAC,OAAO,MAAM,YAAY;AAC5C,QAAI,CAAC,OAAO;AACV,UAAI,WAAW,SAAS,SAAS,cAAc;AAC7C,cAAM,eAAe;AACrB,YAAI,CAAC,oBAAoB;AACvB,+BAAqB,CAAC;AAAA,QACxB;AACA,2BAAmB,SAAS,IAAI,mBAAmB,SAAS,KAAK,CAAC;AAClE,YAAI,CAAC,mBAAmB,SAAS,EAAE,SAAS,WAAW,EAAE,GAAG;AAC1D,6BAAmB,SAAS,EAAE,KAAK,WAAW,EAAE;AAAA,QAClD;AAEA,YAAI,CAAC,cAAc;AAEjB,kBAAQ,KAAK,sDAAsD,kBAAkB;AAAA,QACvF;AAAA,MACF,OAAO;AACL,eAAwC,QAAQ,OAAO,WAAW,OAAO,IAAI;AAAA,MAC/E;AAAA,IACF;AAAA,EACF;AACA,cAAY,aAAa,CAAC,OAAO,SAAS,SAAS,YAAY;AAC7D,gBAAY,OAAO,cAAc,KAAK,OAAO,kCAAkC,OAAO,cAAc,UAAU,IAAI,OAAO,KAAK,EAAE,EAAE;AAAA,EACpI;AACA,SAAO;AACT,IAAI,MAAM;AACR,QAAM,cAAc,MAAM;AAAA,EAAC;AAC3B,cAAY,aAAa;AACzB,SAAO;AACT;AACA,IAAOC,mBAAQ;",
  "names": ["resetWarned", "warning_default"]
}
